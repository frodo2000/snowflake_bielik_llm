USE ROLE ACCOUNTADMIN;

CREATE DATABASE IF NOT EXISTS <SnowflakeDatabase>;
CREATE ROLE IF NOT EXISTS <SnowflakeDatabase>_ADMIN;

GRANT OWNERSHIP ON DATABASE <SnowflakeDatabase> TO ROLE <SnowflakeDatabase>_ADMIN;
GRANT ALL PRIVILEGES ON DATABASE <SnowflakeDatabase> TO ROLE <SnowflakeDatabase>_ADMIN;

GRANT BIND SERVICE ENDPOINT ON ACCOUNT TO ROLE <SnowflakeDatabase>_ADMIN;
GRANT CREATE COMPUTE POOL ON ACCOUNT TO ROLE <SnowflakeDatabase>_ADMIN;
GRANT CREATE INTEGRATION ON ACCOUNT TO ROLE <SnowflakeDatabase>_ADMIN;

GRANT ROLE <SnowflakeDatabase>_ADMIN TO USER <SnowflakeUser>;
  
USE ROLE <SnowflakeDatabase>_ADMIN;
USE DATABASE <SnowflakeDatabase>;

CREATE SCHEMA IF NOT EXISTS VLLM;
USE SCHEMA VLLM;

CREATE IMAGE REPOSITORY IF NOT EXISTS images;

CREATE STAGE IF NOT EXISTS models
    DIRECTORY = (ENABLE = TRUE)
    ENCRYPTION = (TYPE='SNOWFLAKE_SSE');

CREATE STAGE IF NOT EXISTS specs
    DIRECTORY = (ENABLE = TRUE)
    ENCRYPTION = (TYPE='SNOWFLAKE_SSE');

CREATE NETWORK RULE IF NOT EXISTS HF_NETWORK
    MODE = EGRESS
    TYPE = HOST_PORT
    VALUE_LIST = ('huggingface.co', 'cdn-lfs*.hf.co');

CREATE EXTERNAL ACCESS INTEGRATION IF NOT EXISTS HF_INTEGRATION
    ALLOWED_NETWORK_RULES = (HF_NETWORK)
    ENABLED = TRUE;

CREATE COMPUTE POOL IF NOT EXISTS <SnowflakeDatabase>_GPU_NV_M
    MIN_NODES = 1
    MAX_NODES = 2
    INSTANCE_FAMILY = GPU_NV_M;

DESCRIBE COMPUTE POOL <SnowflakeDatabase>_GPU_NV_M;